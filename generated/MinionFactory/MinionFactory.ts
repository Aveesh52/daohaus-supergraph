// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class SummonMinion extends EthereumEvent {
  get params(): SummonMinion__Params {
    return new SummonMinion__Params(this);
  }
}

export class SummonMinion__Params {
  _event: SummonMinion;

  constructor(event: SummonMinion) {
    this._event = event;
  }

  get minion(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get moloch(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class MinionFactory extends SmartContract {
  static bind(address: Address): MinionFactory {
    return new MinionFactory("MinionFactory", address);
  }

  summonMinion(moloch: Address): Address {
    let result = super.call("summonMinion", [
      EthereumValue.fromAddress(moloch)
    ]);

    return result[0].toAddress();
  }

  try_summonMinion(moloch: Address): CallResult<Address> {
    let result = super.tryCall("summonMinion", [
      EthereumValue.fromAddress(moloch)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  template(): Address {
    let result = super.call("template", []);

    return result[0].toAddress();
  }

  try_template(): CallResult<Address> {
    let result = super.tryCall("template", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _template(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SummonMinionCall extends EthereumCall {
  get inputs(): SummonMinionCall__Inputs {
    return new SummonMinionCall__Inputs(this);
  }

  get outputs(): SummonMinionCall__Outputs {
    return new SummonMinionCall__Outputs(this);
  }
}

export class SummonMinionCall__Inputs {
  _call: SummonMinionCall;

  constructor(call: SummonMinionCall) {
    this._call = call;
  }

  get moloch(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SummonMinionCall__Outputs {
  _call: SummonMinionCall;

  constructor(call: SummonMinionCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
